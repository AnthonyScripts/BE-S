local Library = loadstring(game:HttpGet'https://ataias.xyz/new-ui.lua')()
local DupingCash = false

local Services = setmetatable({}, {
    __index = function(self, index)
        local s = game:GetService(index)
        if s then return s end
    end
})

local Notify = function(title, text, duration)
    Services.StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration
    })
end

local Client = Services.Players.LocalPlayer

local Functions; Functions = {
    DupeInventory = function()
        local Head = Client.Character:WaitForChild("Head")
        local Pos = Head.CFrame
        Head:Destroy()
        for _, v in next, Client.Backpack:GetChildren() do
            task.spawn(function()
                Services.ReplicatedStorage.Interaction.ClientInteracted:FireServer(v, "Drop tool", Pos)
            end)
        end
        Client.CharacterAdded:Wait()
        local hrp = Client.Character:WaitForChild("HumanoidRootPart")
        wait(1)
        hrp.CFrame = Pos
        if Library._flags.DupeInventory == true then
            Functions.DupeInventory()
        end
    end,
    SendMoney = function(plr, amt)
        return Services.ReplicatedStorage.Transactions.ClientToServer.Donate:InvokeServer(plr, amt, Client.CurrentSaveSlot.Value)
    end,
    SaveSlot = function()
        Services.ReplicatedStorage.LoadSaveRequests.RequestSave:InvokeServer(Client.CurrentSaveSlot.Value)
    end,
    DupeCash = function()
        if DupingCash then return end
        local CurrentSlot = Client.CurrentSaveSlot
        local ReloadToSlot = CurrentSlot.Value
        if CurrentSlot.Value == -1 then
            return Notify("Error!", "You must load your slot to duplicate your cash.", 5)
        end
        DupingCash = true
        if not Library._flags.DisableSave then
            Library:UpdateToggle("DisableSave")
            wait()
        end
        local DupeAmt = Client.leaderstats.Money.Value
        Notify("Cash Dupe", "Waiting for load cooldown", 3)
        repeat
            wait(.25)
        until Services.ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer() == true
        Notify("Cash Dupe", "Sending cash to client", 3)
        repeat
            task.spawn(function()Functions.SendMoney(Client, DupeAmt)end)
            wait(.25)
        until Client.leaderstats.Money.Value == 0
        Notify("Cash Dupe", "Reloading", 3)
        Services.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(-1)
        wait()
        Services.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(ReloadToSlot)
        repeat wait() until Client.leaderstats.Money.Value >= DupeAmt * 2
        Notify("Success!", "Successfully duplicated your money :   )", 4)
        if Library._flags.DisableSave then Library:UpdateToggle("DisableSave") wait() end
        wait(1)
        Functions.SaveSlot()
        DupingCash = false
        if Library._flags.DupeMoney then
            Functions.DupeCash()    
        end
    end
}

local OldNamecall; OldNamecall = hookmetamethod(game, "__namecall", function(...)
    if tostring(...) == "RequestSave" and Library._flags.DisableSave then
        return true
    end
    return OldNamecall(...)
end)

for _, v in next, getgc() do
    if type(v) == "function" and getfenv(v).script == Client.PlayerGui.PropertyPurchasingGUI.PropertyPurchasingClient then
        local Functions = getfenv(v)
        local enterPurchaseMode = Functions.enterPurchaseMode
        getfenv(v).enterPurchaseMode = function(...)
            if not DupingCash then
                return enterPurchaseMode(...)
            end
            local props = {}
            for _, v in next, Services.Workspace.Properties:GetChildren() do
                if v:FindFirstChild("Owner") and v.Owner.Value == nil then
                    table.insert(props, v)
                end
            end
            local plot = props[math.random(1, #props)]
            setupvalue(Functions.rotate, 3, 0)
            setupvalue(enterPurchaseMode, 10, plot)
            return
        end
        break
    end
end

local UI = Library:Window("BE&S")
local Main = UI:New("Dupe")
local Options = UI:New("Options")

Main:Toggle("Disable Saving", "DisableSave", false)
Main:Btn("Dupe Inventory", Functions.DupeInventory)
Main:Toggle("Dupe Inventory (Loop)", "DupeInventory", false)
Main:Btn("Dupe Money", Functions.DupeCash)
Main:Toggle("Dupe Money (Loop)", "DupeMoney", false)
Main:Btn("Save Slot", Functions.SaveSlot)

Options:Btn("By Anthony of BE&S")
Options:Btn("Kill Script", function()
    Library._ui:Destroy()
    DupingCash = false
    hookmetamethod(game, "__namecall", OldNamecall)
end)

Services.UserInputService.InputEnded:Connect(function(inp)
    if inp.KeyCode == Enum.KeyCode.LeftAlt then Library._ui.Enabled = not Library._ui.Enabled end
end)

Notify("By Anthony / Info", "Key to toggle UI visibility is Left Alt.", 5)
